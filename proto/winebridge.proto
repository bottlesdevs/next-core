syntax = "proto3";

package winebridge;

service WineBridge {
    rpc Message (MessageRequest) returns (MessageResponse);
    rpc RunningProcesses (RunningProcessesRequest) returns (RunningProcessesResponse);
    rpc CreateProcess (CreateProcessRequest) returns (CreateProcessResponse);
    rpc KillProcess (KillProcessRequest) returns (KillProcessResponse);

    rpc CreateRegistryKey (CreateRegistryKeyRequest) returns (MessageResponse);
    rpc DeleteRegistryKey (DeleteRegistryKeyRequest) returns (MessageResponse);
    rpc GetRegistryKey (GetRegistryKeyRequest) returns (RegistryKey);
    rpc GetRegistryKeyValue (RegistryKeyRequest) returns (RegistryValue);
    rpc SetRegistryKeyValue (SetRegistryKeyValueRequest) returns (MessageResponse);
    rpc DeleteRegistryKeyValue (RegistryKeyRequest) returns (MessageResponse);
}

enum RegistryValueType {
    REG_NONE = 0;
    REG_BINARY = 1;
    REG_DWORD = 2;
    REG_QWORD = 3;
    REG_EXPAND_SZ = 4;
    REG_MULTI_SZ = 5;
    REG_SZ = 6;
}

message RegistryValue {
    RegistryValueType type = 2;
    bytes data = 3;
}

message RegistryKeyValue {
    string name = 1;
    RegistryValue value = 2;
}

message RegistryKey {
    string hive = 1;
    string subkey = 2;
    repeated RegistryKeyValue values = 3;
}

message GetRegistryKeyRequest {
    string hive = 1;
    string subkey = 2;
}

message CreateRegistryKeyRequest {
    string hive = 1;
    string subkey = 2;
}

message RegistryKeyRequest {
    string hive = 1;
    string subkey = 2;
    string name = 3;
}

message SetRegistryKeyValueRequest {
    RegistryKeyRequest key = 1;
    RegistryValue value = 4;
}

message DeleteRegistryKeyRequest {
    string hive = 1;
    string subkey = 2;
}

message MessageRequest {
    string message = 1;
}

message MessageResponse {
    bool success = 1;
}

message Process {
    uint32 pid = 1;
    string name = 2;
    uint32 threads = 3;
}

message RunningProcessesRequest {
}

message RunningProcessesResponse {
    repeated Process processes = 1;
}

message CreateProcessRequest {
    string command = 1;
    repeated string args = 2;
}

message CreateProcessResponse {
    uint32 pid = 1;
}

message KillProcessRequest {
    uint32 pid = 1;
}

message KillProcessResponse {
}
